name: 1. Daily Sync and Sanitize Rules

on:
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * *' # 北京时间每日早晨 5 点

permissions:
  contents: write

jobs:
  sync-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Sync, Prune, and Sanitize Source Files
        id: sync_and_sanitize
        run: |
          echo "### Starting: Sync, Prune, and Sanitize ###"
          SOURCE_DIR="rulesets"
          if [ ! -f sources.urls ]; then echo "sources.urls not found, skipping."; exit 0; fi
          touch expected_files.list && grep -v '^#' sources.urls | grep -v '^$' | while read -r url; do project_name=$(echo "${url}" | awk -F/ '{print $4}'); original_filename=$(basename "${url}"); echo "${SOURCE_DIR}/${project_name}/${original_filename}" >> expected_files.list; done
          touch actual_files.list && { [ -d "$SOURCE_DIR" ] && find "$SOURCE_DIR" -type f > actual_files.list || true; }
          sort actual_files.list -o actual_files.list && sort expected_files.list -o expected_files.list
          comm -23 actual_files.list expected_files.list | while read -r file; do if [ -n "$file" ]; then echo "Pruning obsolete file: ${file}"; rm "$file"; fi; done
          grep -v '^#' sources.urls | grep -v '^$' | while read -r url; do project_name=$(echo "${url}" | awk -F/ '{print $4}'); original_filename=$(basename "${url}"); target_path="${SOURCE_DIR}/${project_name}/${original_filename}"; curl -sS -L --create-dirs -o "${target_path}.tmp_download" "${url}"; if [ ! -s "${target_path}.tmp_download" ]; then echo "Warning: Download failed for ${url}."; rm -f "${target_path}.tmp_download"; continue; fi; sed '1{/^payload: *$/d;}' "${target_path}.tmp_download" | grep -v -E '^#|^!' | grep -v -E '^\s*$' | while read -r line; do line=$(echo "$line" | xargs); if [ -z "$line" ]; then continue; fi; echo "$line"; done > "${target_path}"; rm -f "${target_path}.tmp_download"; done
          if [ -d "$SOURCE_DIR" ]; then find "$SOURCE_DIR" -type d -empty -delete; fi
          echo "### Process complete. ###"

      - name: Commit Changes
        run: |
          # 检查是否有文件变动
          if [[ -z $(git status -s) ]]; then
            echo "No changes to commit."
          else
            echo "Changes detected, committing to main branch..."
            git config --global user.name 'GitHub Actions Bot'
            git config --global user.email 'actions@github.com'
            git add .
            git commit -m "chore(daily-sync): Update rule sets for $(date +'%Y-%m-%d')"
            git push
          fi
