name: "4. Generate README (Merged Rules Index)"

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Links base ref (e.g. main or rules-YYYY-MM-DD). Default: main"
        required: false
        type: string
      cdn:
        description: "CDN for links: jsdelivr or raw"
        required: false
        default: "jsdelivr"
        type: choice
        options:
          - "jsdelivr"
          - "raw"
  workflow_run:
    workflows: ["5. Merge Rule Sets (Smart Copy)"]
    types: [completed]
    branches: [main]
  push:
    branches: [ main ]
    paths:
      - "merged-rules/**"
      - "scripts/gen-readme.sh"

permissions:
  contents: write

concurrency:
  group: gen-readme
  cancel-in-progress: true

env:
  TZ: Asia/Shanghai

jobs:
  gen-readme:
    runs-on: ubuntu-latest
    # 只在前置工作流成功时运行（如果是 workflow_run 触发）
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make generator executable
        shell: bash
        run: chmod +x scripts/gen-readme.sh

      - name: Generate README (merged-rules only)
        shell: bash
        env:
          INPUT_REF: ${{ inputs.ref || 'main' }}
          INPUT_CDN: ${{ inputs.cdn || 'jsdelivr' }}
        run: scripts/gen-readme.sh

      # 在生成完成后，触发“仓库B”的 MRS 构建
      - name: Trigger Repo B build-mrs
        if: ${{ success() && github.ref == 'refs/heads/main' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_B_TOKEN }}         # 仓库A的Secret：细粒度PAT（Contents: Read and write）
          repository: mrsrules/rule                   # 替换为 仓库B 的 owner/repo
          event-type: build-mrs                      # 仓库B需监听 repository_dispatch.types: [build-mrs]
          client-payload: >-
            {
              "from_repo": "${{ github.repository }}",
              "run_id": "${{ github.run_id }}",
              "ref": "${{ inputs.ref || 'main' }}",
              "sha": "${{ github.sha }}",
              "cdn": "${{ inputs.cdn || 'jsdelivr' }}"
            }
