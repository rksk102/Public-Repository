name: "4. Generate README (Merged Rules Index)"

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Links base ref (e.g. main or rules-YYYY-MM-DD). Default: main"
        required: false
        type: string
      cdn:
        description: "CDN for links: jsdelivr or raw"
        required: false
        default: "jsdelivr"
        type: choice
        options:
          - "jsdelivr"
          - "raw"
  workflow_run:
    workflows:
      - "5. Merge Rule Sets (Type Check + Organize)"
      - "merge-rules.yml"  # 也支持通过文件名匹配，避免改名导致不触发
    types: [completed]
  push:
    branches: [ main ]
    # 监听项目文件任意变更，但忽略 README.md，防止 README 提交形成循环触发
    paths-ignore:
      - "README.md"

permissions:
  contents: write

concurrency:
  group: gen-readme
  cancel-in-progress: true

env:
  TZ: Asia/Shanghai

jobs:
  gen-readme:
    runs-on: ubuntu-latest
    # 条件说明：
    # - workflow_run：仅当上游成功才执行
    # - push：若是 merge-rules 的自动提交（含 'chore(merge):'），则不跑，避免重复；其他普通 push 则运行
    # - workflow_dispatch：手动触发总是允许
    if: ${{ 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
      || (github.event_name == 'push' && !contains(github.event.head_commit.message, 'chore(merge):'))
      || (github.event_name == 'workflow_dispatch')
    }}
    steps:
      - name: Checkout repository (full history for rebase)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        shell: bash
        run: |
          git config user.name 'GitHub Actions Bot'
          git config user.email 'actions@github.com'

      - name: Rebase to latest main
        shell: bash
        run: |
          set -euo pipefail
          BRANCH="${GITHUB_REF_NAME:-main}"
          git fetch origin "$BRANCH"
          git checkout "$BRANCH"
          git pull --rebase origin "$BRANCH"

      - name: Make generator executable
        shell: bash
        run: chmod +x scripts/gen-readme.sh

      - name: Generate README (merged-rules only)
        shell: bash
        env:
          INPUT_REF: ${{ inputs.ref || 'main' }}
          INPUT_CDN: ${{ inputs.cdn || 'jsdelivr' }}
        run: scripts/gen-readme.sh

      - name: Commit README changes (if any)
        id: commit
        shell: bash
        run: |
          set -euo pipefail
          if git diff --quiet README.md; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "No README changes."
            exit 0
          fi
          git add README.md
          git commit -m "docs(readme): auto-update (merged-rules) at $(date +'%Y-%m-%d %H:%M:%S %Z')"
          echo "changed=true" >> "$GITHUB_OUTPUT"

      - name: Push with rebase retry
        if: steps.commit.outputs.changed == 'true'
        shell: bash
        run: |
          set -euo pipefail
          BRANCH="${GITHUB_REF_NAME:-main}"
          if git push origin "$BRANCH"; then
            exit 0
          fi
          echo "Non-fast-forward, rebasing and retrying..."
          git pull --rebase origin "$BRANCH"
          git push origin "$BRANCH" || {
            echo "::error::Failed to push after rebase retry."
            exit 1
          }
